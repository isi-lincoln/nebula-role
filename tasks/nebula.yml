- name: Ensure {{ nebula_install_destination}} directory exists
  file:
    path: "{{ nebula_install_destination}}"
    state: directory
    mode: '0700'
    owner: root
    group: root

- name: Check for existing Nebula install
  stat:
    path: '{{ nebula_install_destination}}/nebula'
  register: installed_nebula_stats

- name: Get Nebula version (if installed)
  command: "{{ nebula_install_destination}}/nebula -version"
  register: installed_nebula_version_out
  changed_when: False
  failed_when: False
  when: installed_nebula_stats.stat.exists

- name: Extract Nebula version from command output
  set_fact:
    installed_nebula_version: "{{ installed_nebula_version_out.stdout.split(' ')[1] }}"
  when: installed_nebula_stats.stat.exists

- name: Download & Extract Nebula
  unarchive:
    src: "https://github.com/slackhq/nebula/releases/download/v{{ nebula_version }}/nebula-linux-{{ nebula_architectures[ansible_architecture] }}.tar.gz"
    dest: "{{ nebula_install_destination}}"
    remote_src: yes
  when: (installed_nebula_version|default(nebula_version) != nebula_version) or (not installed_nebula_stats.stat.exists)
  notify: restart nebula

- name: Ensure Nebula binaries permissions are correct
  file:
    path: "{{ nebula_install_destination}}/{{ item }}"
    owner: root
    group: root
    mode: '0700'
  with_items:
    - nebula
    - nebula-cert
